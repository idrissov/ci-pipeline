<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>test-docker-rest</artifactId>
        <groupId>org.github.idrissov</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <packaging>war</packaging>

    <artifactId>api</artifactId>

    <properties>
        <springframework.version>4.3.0.RELEASE</springframework.version>
        <jackson.library>2.7.5</jackson.library>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${springframework.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${springframework.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${springframework.version}</version>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.library}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-xml</artifactId>
            <version>${jackson.library}</version>
        </dependency>


    </dependencies>


    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.2</version>
                    <configuration>
                        <source>1.8</source>
                        <target>1.8</target>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>2.4</version>
                    <configuration>
                        <warSourceDirectory>src/main/webapp</warSourceDirectory>
                        <warName>api</warName>
                        <failOnMissingWebXml>false</failOnMissingWebXml>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <!--<plugin>-->
                <!--<groupId>io.fabric8</groupId>-->
                <!--<artifactId>docker-maven-plugin</artifactId>-->
                <!--<version>0.26.0</version>-->

                <!--<configuration>-->
                    <!--<images>-->
                        <!--&lt;!&ndash; A single's image configuration &ndash;&gt;-->
                        <!--<image>-->
                            <!--<name>${project.artifactId}</name>-->
                            <!--<build>-->
                                <!--<from>tomcat:latest</from>-->
                                <!--<tags>-->
                                    <!--<tag>${project.version}</tag>-->
                                <!--</tags>-->
                                <!--<ports>-->
                                    <!--<port>8080</port>-->
                                <!--</ports>-->
                                <!--<cmd>-->
                                    <!--<shell>catalina.sh run</shell>-->
                                <!--</cmd>-->

                                <!--<assembly>-->
                                    <!--<inline>-->
                                        <!--<files>-->
                                            <!--<file>-->
                                                <!--<source>${project.build.directory}/${project.build.finalName}.war</source>-->
                                                <!--<outputDirectory>webapps/</outputDirectory>-->
                                            <!--</file>-->
                                            <!--<file>-->
                                                <!--<source>${build.outputDirectory}/tomcat-users.xml</source>-->
                                                <!--<outputDirectory>conf/</outputDirectory>-->
                                            <!--</file>-->

                                        <!--</files>-->
                                    <!--</inline>-->
                                <!--</assembly>-->
                            <!--</build>-->
                        <!--</image>-->
                    <!--</images>-->

                <!--</configuration>-->

                <!--&lt;!&ndash; Connect start/stop to pre- and-->
                     <!--post-integration-test phase, respectively if you want to start-->
                     <!--your docker containers during integration tests &ndash;&gt;-->
                <!--<executions>-->
                    <!--<execution>-->
                        <!--<id>start</id>-->
                        <!--<phase>pre-integration-test</phase>-->
                        <!--<goals>-->
                            <!--&lt;!&ndash; "build" should be used to create the images with the-->
                                 <!--artifact &ndash;&gt;-->
                            <!--<goal>build</goal>-->
                            <!--<goal>start</goal>-->
                        <!--</goals>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>stop</id>-->
                        <!--<phase>post-integration-test</phase>-->
                        <!--<goals>-->
                            <!--<goal>stop</goal>-->
                        <!--</goals>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>Build docker container</id>-->
                        <!--<phase>package</phase>-->
                        <!--<goals>-->
                            <!--<goal>build</goal>-->
                        <!--</goals>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>Push docker container</id>-->
                        <!--<phase>deploy</phase>-->
                        <!--<goals>-->
                            <!--<goal>push</goal>-->
                        <!--</goals>-->
                    <!--</execution>-->
                <!--</executions>-->
            <!--</plugin>-->
        </plugins>

        <finalName>api</finalName>
    </build>

</project>